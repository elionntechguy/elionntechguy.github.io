{"version":3,"sources":["theme/theme.ts","styles/LoadingStyles.ts","components/LoadingPage.tsx","styles/NavBarStyles.ts","components/NavigationBar.tsx","styles/FooterStyles.ts","assets/elion-resume.pdf","components/Footer.tsx","App.tsx","reportWebVitals.ts","styles/global.ts","index.tsx"],"names":["theme","color","black","darkblue","orange","Background","styled","div","LoadingPage","type","height","width","TransparentNav","Navbar","NavigationBar","expand","variant","bg","Container","fluid","Brand","href","FooterContainer","Footer","className","Row","Col","resume","target","rel","download","Home","lazy","pMinDelay","About","Work","Contact","App","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAQaA,EAAgB,CAC3BC,MAAO,CACLC,MAAO,UACPC,SAAU,UACVC,OAAQ,Y,QCVCC,EAAaC,IAAOC,IAAV,oH,wBCURC,EARe,WAC5B,OACE,cAACH,EAAD,UACE,cAAC,IAAD,CAAQI,KAAK,OAAOR,MAAM,UAAUS,OAAQ,IAAKC,MAAO,S,gBCJjDC,EAAiBN,YAAOO,IAAPP,CAAH,4UAOd,qBAAGN,MAAkBC,MAAMG,UAS3B,qBAAGJ,MAAkBC,MAAMG,UCf3BU,EAA0B,WACrC,OACE,mCACE,cAACF,EAAD,CAAgBG,OAAO,KAAKC,QAAQ,QAAQC,GAAG,QAA/C,SACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,SACE,cAACP,EAAeQ,MAAhB,CAAsBC,KAAK,IAA3B,sB,gBCPGC,EAAkBhB,IAAOC,IAAV,+bAKF,qBAAGP,MAAkBC,MAAMG,UAWtC,qBAAGJ,MAAkBC,MAAMG,UClB3B,MAA0B,yCCM5BmB,EAAmB,WAC9B,OACE,cAACD,EAAD,UACE,sBAAKE,UAAU,cAAf,UACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,qBAAKF,UAAU,mBAAf,SACE,mEAIN,cAACC,EAAA,EAAD,UACE,qBAAKD,UAAU,qBAAf,SACE,mBAAGH,KAAMM,EAAQC,OAAO,SAASC,IAAI,sBAAsBC,UAAQ,EAAnE,gCAKJ,cAACL,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACE,sBAAKF,UAAU,sBAAf,UACE,mBAAGH,KAAK,oCAAR,SACE,mBAAGG,UAAU,oBAEf,mBAAGH,KAAK,mCAAR,SACE,mBAAGG,UAAU,gC,QCnBvBO,EAAOC,gBAAK,kBAAMC,YAAU,8BAAwB,QACpDC,EAAQF,gBAAK,kBAAM,kCACnBG,EAAOH,gBAAK,kBAAM,iCAClBI,EAAUJ,gBAAK,kBAAM,kCAiBZK,EAfO,WACpB,OACE,cAAC,IAAD,CAAerC,MAAOA,EAAtB,SACE,eAAC,WAAD,CAAUsC,SAAU,cAAC,EAAD,IAApB,UACE,cAAC,EAAD,IACA,cAACP,EAAD,IACA,cAACG,EAAD,IACA,cAACC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,UCZOG,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCPDQ,EAAcC,YAAH,yI,8BCWxBC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAACJ,EAAD,IACA,cAAC,EAAD,OAEFK,SAASC,eAAe,SAM1Bf,M","file":"static/js/main.e6bd8a6f.chunk.js","sourcesContent":["interface ITheme {\n  color: {\n    black: string;\n    darkblue: string;\n    orange: string;\n  };\n}\n\nexport const theme: ITheme = {\n  color: {\n    black: \"#0A0A0A\",\n    darkblue: \"#141C3A\",\n    orange: \"#FF8F00\",\n  },\n};\n","import styled from \"styled-components\";\n\nexport const Background = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n`;\n","import { Background } from \"../styles/LoadingStyles\";\n\nimport Loader from \"react-loader-spinner\";\n\nconst LoadingPage: React.FC = () => {\n  return (\n    <Background>\n      <Loader type=\"Oval\" color=\"#FF8F00\" height={100} width={100} />\n    </Background>\n  );\n};\n\nexport default LoadingPage;\n","import styled from \"styled-components\";\nimport { Navbar } from \"react-bootstrap\";\n\nexport const TransparentNav = styled(Navbar)`\n  margin-bottom: -74px;\n  z-index: 1;\n  background-color: transparent !important;\n\n  .navbar-brand {\n    font-family: \"Condiment\";\n    color: ${({ theme }) => theme.color.orange} !important;\n    font-size: 32px !important;\n  }\n\n  .nav-link {\n    transition: 0.3s;\n  }\n\n  .nav-link:hover {\n    color: ${({ theme }) => theme.color.orange} !important;\n  }\n`;\n","import { Container } from \"react-bootstrap\";\n\nimport { TransparentNav } from \"../styles/NavBarStyles\";\n\nexport const NavigationBar: React.FC = () => {\n  return (\n    <>\n      <TransparentNav expand=\"lg\" variant=\"light\" bg=\"light\">\n        <Container fluid>\n          <TransparentNav.Brand href=\"#\">e</TransparentNav.Brand>\n        </Container>\n      </TransparentNav>\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const FooterContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 250px;\n  border-top: 1px solid ${({ theme }) => theme.color.orange};\n  background-color: #fff3cd;\n\n  .row {\n    margin: 1rem;\n  }\n\n  .footer-download-cv {\n    text-align: center;\n\n    a {\n      color: ${({ theme }) => theme.color.orange};\n    }\n  }\n\n  .footer-social-icons {\n    font-size: 24px;\n    text-align: center;\n\n    a {\n      color: #000000;\n      margin: 5px;\n    }\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/elion-resume.6aac5326.pdf\";","import { Row, Col } from \"react-bootstrap\";\n\nimport { FooterContainer } from \"../styles/FooterStyles\";\n\nimport resume from \"../assets/elion-resume.pdf\";\n\nexport const Footer: React.FC = () => {\n  return (\n    <FooterContainer>\n      <div className=\"footer-main\">\n        <Row>\n          <Col>\n            <div className=\"footer-introtext\">\n              <span>&copy; Elion Shkololli 2021</span>\n            </div>\n          </Col>\n        </Row>\n        <Row>\n          <div className=\"footer-download-cv\">\n            <a href={resume} target=\"_blank\" rel=\"noopener noreferrer\" download>\n              download my cv\n            </a>\n          </div>\n        </Row>\n        <Row>\n          <Col>\n            <div className=\"footer-social-icons\">\n              <a href=\"https://twitter.com/elionntechguy\">\n                <i className=\"bi bi-twitter\"></i>\n              </a>\n              <a href=\"https://github.com/elionntechguy\">\n                <i className=\"bi bi-github\"></i>\n              </a>\n            </div>\n          </Col>\n        </Row>\n      </div>\n    </FooterContainer>\n  );\n};\n","import { lazy, Suspense } from \"react\";\n\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from \"./theme/theme\";\n\nimport LoadingPage from \"./components/LoadingPage\";\n\nimport { NavigationBar } from \"./components/NavigationBar\";\nimport { Footer } from \"./components/Footer\";\n\nimport pMinDelay from \"p-min-delay\";\n\nconst Home = lazy(() => pMinDelay(import(\"./views/Home\"), 2000));\nconst About = lazy(() => import(\"./views/About\"));\nconst Work = lazy(() => import(\"./views/Work\"));\nconst Contact = lazy(() => import(\"./views/Contact\"));\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Suspense fallback={<LoadingPage />}>\n        <NavigationBar />\n        <Home />\n        <About />\n        <Work />\n        <Contact />\n        <Footer />\n      </Suspense>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  body,\n  html {\n   font-family: \"Oxygen\" !important;\n   height: 100%;\n   scroll-behavior: smooth;\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { GlobalStyle } from \"./styles/global\";\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"@fontsource/oxygen\";\nimport \"@fontsource/condiment\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyle />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}