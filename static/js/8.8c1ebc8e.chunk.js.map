{"version":3,"sources":["components/contactComponents/ContactMain.tsx"],"names":["ContactMain","useState","name","setName","email","setEmail","message","setMessage","sent","setSent","handleSubmit","event","a","preventDefault","fetch","method","mode","body","JSON","stringify","setTimeout","err","console","error","className","onSubmit","Group","controlId","Control","value","onChange","e","target","type","placeholder","as","rows","Text","variant","disabled","length"],"mappings":"2MAyFeA,UArFe,WAC5B,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwBN,oBAAS,GAAjC,mBAAOO,EAAP,KAAaC,EAAb,KAEMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACnBD,EAAME,iBAEN,IACEC,MAAM,gDAAiD,CACrDC,OAAQ,OACRC,KAAM,UACNC,KAAMC,KAAKC,UAAU,CACnBjB,KAAMA,EACNE,MAAOA,EACPE,QAASA,MAGbH,EAAQ,IACRE,EAAS,IACTE,EAAW,IACXE,GAAQ,GACRW,YAAW,WACTX,GAAQ,KACP,KACH,MAAOY,GACPC,QAAQC,MAAM,yBArBG,2CAAH,sDA6BlB,OACE,qCACE,sBAAKC,UAAU,gBAAf,UACE,8CACA,8FAEF,qBAAKA,UAAU,eAAf,SACE,eAAC,IAAD,CAAMC,SAAUf,EAAhB,UACE,cAAC,IAAKgB,MAAN,CAAYF,UAAU,OAAOG,UAAU,OAAvC,SACE,cAAC,IAAKC,QAAN,CACEC,MAAO3B,EACP4B,SAAU,SAACC,GAAD,OAAO5B,EAAQ4B,EAAEC,OAAOH,QAClCI,KAAK,OACLC,YAAY,gBAGhB,cAAC,IAAKR,MAAN,CAAYF,UAAU,OAAOG,UAAU,QAAvC,SACE,cAAC,IAAKC,QAAN,CACEC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAO1B,EAAS0B,EAAEC,OAAOH,QACnCI,KAAK,OACLC,YAAY,iBAGhB,eAAC,IAAKR,MAAN,CAAYF,UAAU,OAAOG,UAAU,UAAvC,UACE,cAAC,IAAKC,QAAN,CACEC,MAAOvB,EACPwB,SAAU,SAACC,GAAD,OAAOxB,EAAWwB,EAAEC,OAAOH,QACrCM,GAAG,WACHD,YAAY,eACZE,KAAM,IAER,cAAC,IAAKC,KAAN,CAAWb,UAAU,aAArB,mDAIF,cAAC,IAAD,CAAQc,QAAQ,UAAUL,KAAK,SAASM,WAvCvCrC,EAAKsC,OAAS,GAAKpC,EAAMoC,OAAS,GAAKlC,EAAQkC,OAAS,GAuCzD,oBAGChC,GACC,qBAAKgB,UAAU,aAAf,SACE,cAAC,IAAD,CAAOc,QAAQ,UAAf","file":"static/js/8.8c1ebc8e.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nconst ContactMain: React.FC = () => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [sent, setSent] = useState(false);\n\n  const handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    try {\n      fetch(\"https://elionsportfoliobackend.glitch.me/form\", {\n        method: \"POST\",\n        mode: \"no-cors\",\n        body: JSON.stringify({\n          name: name,\n          email: email,\n          message: message,\n        }),\n      });\n      setName(\"\");\n      setEmail(\"\");\n      setMessage(\"\");\n      setSent(true);\n      setTimeout(() => {\n        setSent(false);\n      }, 7000);\n    } catch (err) {\n      console.error(\"Something went wrong.\");\n    }\n  };\n\n  const validateForm = () => {\n    return name.length > 0 && email.length > 0 && message.length > 0;\n  };\n\n  return (\n    <>\n      <div className=\"contact-intro\">\n        <h1>Get in Touch</h1>\n        <p>Have an idea you want to realize or want to work together?</p>\n      </div>\n      <div className=\"contact-form\">\n        <Form onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-3\" controlId=\"name\">\n            <Form.Control\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              type=\"text\"\n              placeholder=\"Your name\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"email\">\n            <Form.Control\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              type=\"text\"\n              placeholder=\"Your email\"\n            />\n          </Form.Group>\n          <Form.Group className=\"mb-3\" controlId=\"message\">\n            <Form.Control\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n              as=\"textarea\"\n              placeholder=\"Your message\"\n              rows={7}\n            />\n            <Form.Text className=\"text-muted\">\n              Fill out all the inputs to submit.\n            </Form.Text>\n          </Form.Group>\n          <Button variant=\"warning\" type=\"submit\" disabled={!validateForm()}>\n            Submit\n          </Button>\n          {sent && (\n            <div className=\"sent-alert\">\n              <Alert variant=\"warning\">Your message was sent!</Alert>\n            </div>\n          )}\n        </Form>\n      </div>\n    </>\n  );\n};\n\nexport default ContactMain;\n"],"sourceRoot":""}